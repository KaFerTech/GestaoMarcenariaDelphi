unit unGrupoMaterial;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, unFormPadrao, Data.DB, System.Actions,
  Vcl.ActnList, System.ImageList, Vcl.ImgList, Vcl.Grids, Vcl.DBGrids,
  Vcl.ExtCtrls, Vcl.ComCtrls, Vcl.ToolWin, Vcl.WinXCtrls, Vcl.StdCtrls,
  Vcl.Mask, Vcl.DBCtrls;

type
  TfrmGrupoMaterial = class(TfrmPadrao)
    gbF4: TGroupBox;
    edtCodigoGrupoMaterial: TDBEdit;
    gbF5: TGroupBox;
    tgsSituacaoGrupoMaterial: TToggleSwitch;
    GroupBox1: TGroupBox;
    edtDataInativacaoGrupoMaterial: TDBEdit;
    GroupBox2: TGroupBox;
    edtDataInclusaoGrupoMaterial: TDBEdit;
    gbF3: TGroupBox;
    edtNomeGrupoMaterial: TDBEdit;
    dsGrupoMaterial: TDataSource;
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure dsGrupoMaterialDataChange(Sender: TObject; Field: TField);
  private
    { Private declarations }
    procedure AtualizaNomeGrid;
    procedure InclusaoEdicao;
    procedure DesativaCampos;
  public
    { Public declarations }
  end;

var
  frmGrupoMaterial: TfrmGrupoMaterial;

implementation

{$R *.dfm}

uses unDmGrupoMaterial;

procedure TfrmGrupoMaterial.AtualizaNomeGrid;
var
  i: Integer;
begin
  // Ajusta o tamanho dos campos do grid
  for i := 0 to dbgFormPadrao.Columns.Count - 1 do
  begin

    if dbgFormPadrao.Columns.Items[i].Title.caption = 'CODGENERO' then
    begin
      dbgFormPadrao.Columns[i].Visible := false;
    end;

    if dbgFormPadrao.Columns.Items[i].Title.caption = 'CODUSUARIO' then
    begin
      dbgFormPadrao.Columns[i].Visible := false;
    end;

    if dbgFormPadrao.Columns.Items[i].Title.caption = 'SIT' then
    begin
      dbgFormPadrao.Columns[i].Visible := false;
    end;

    if dbgFormPadrao.Columns.Items[i].Title.caption = 'CODTIPENDER' then
    begin
      dbgFormPadrao.Columns[i].Visible := false;
    end;

    dbgFormPadrao.Columns[i].Width := Canvas.TextWidth(dbgFormPadrao.Columns[i].Field.AsString) + 20;
  end;
end;

procedure TfrmGrupoMaterial.DesativaCampos;
begin
  edtCpfFuncionario.Enabled := false;
  edtNomeFuncionario.Enabled := false;
  edtDataNascimentoFuncionario.Enabled := false;
  edtNacionalidadeFuncionario.Enabled := false;
  edtCargoFuncionario.Enabled := false;
  edtDepartamentoFuncionario.Enabled := false;
  edtTelefoneFuncionario.Enabled := false;
  edtCepFuncionario.Enabled := false;
  edtUfFuncionario.Enabled := false;
  edtCidadeFuncionario.Enabled := false;
  edtBairroFuncionario.Enabled := false;
  edtTipoLogradouroFuncionario.Enabled := false;
  edtLogradouroFuncionario.Enabled := false;
  edtNumeroFuncionario.Enabled := false;
  edtComplementoFuncionario.Enabled := false;
  cboUsuarioFuncionario.Enabled := false;
  tgsSituacaoFuncionario.Enabled := false;
  rdbComercial.Enabled := false;
  rdbResidencial.Enabled := false;
  rdbMasculino.Enabled := false;
  rdbFeminino.Enabled := false;
  tgsSituacaoFuncionario.state := tssOn;
end;

procedure TfrmGrupoMaterial.dsGrupoMaterialDataChange(Sender: TObject;
  Field: TField);
begin
  inherited;

  if not(dmCadastroFuncionario.cdsCadastroFuncionario.state in [dsEdit, dsInsert])
  then
  begin

    if dmCadastroFuncionario.cdsCadastroFuncionario.FieldByName('Sit').text = '1'
    then
    begin
      tgsSituacaoFuncionario.state := tssOn;
    end
    else
    begin
      tgsSituacaoFuncionario.state := tssOff;
    end;

    if dmCadastroFuncionario.cdsCadastroFuncionario.FieldByName('CODTIPENDER').text = 'C' then
    begin
      rdbComercial.Checked := true;
    end
    else
    begin
      rdbResidencial.Checked := true;
    end;

    if dmCadastroFuncionario.cdsCadastroFuncionario.FieldByName('CODGENERO').text = 'M' then
    begin
      rdbMasculino.Checked := true;
    end
    else
    begin
      rdbFeminino.Checked := true;
    end;

  end;
end;

procedure TfrmGrupoMaterial.FormCreate(Sender: TObject);
begin
  inherited;
  // criando o datamodule de clientes para uso
  if not Assigned(dmCadastroFuncionario) then
    dmCadastroFuncionario := tdmCadastroFuncionario.Create(nil);
  dsCadastroFuncionario.dataset := dmCadastroFuncionario.cdsCadastroFuncionario;
end;

procedure TfrmGrupoMaterial.FormDestroy(Sender: TObject);
begin
  inherited;
  // fecha o data set e destruo objeto
  if Assigned(dmCadastroFuncionario) then
  begin
    dmCadastroFuncionario.cdsCadastroFuncionario.Close;
    freeandnil(dmCadastroFuncionario);
  end;
end;

procedure TfrmGrupoMaterial.FormShow(Sender: TObject);
begin
  inherited;
  // abro o dataset
  dmCadastroFuncionario.cdsCadastroFuncionario.Open;
  dmCadastroFuncionario.cdsUsuarioFuncionario.Open;
  AtualizaNomeGrid;
end;

procedure TfrmGrupoMaterial.InclusaoEdicao;
begin
  edtCpfFuncionario.Enabled := true;
  edtNomeFuncionario.Enabled := true;
  edtDataNascimentoFuncionario.Enabled := true;
  edtNacionalidadeFuncionario.Enabled := true;
  edtCargoFuncionario.Enabled := true;
  edtDepartamentoFuncionario.Enabled := true;
  edtTelefoneFuncionario.Enabled := true;
  edtCepFuncionario.Enabled := true;
  edtUfFuncionario.Enabled := true;
  edtCidadeFuncionario.Enabled := true;
  edtBairroFuncionario.Enabled := true;
  edtTipoLogradouroFuncionario.Enabled := true;
  edtLogradouroFuncionario.Enabled := true;
  edtNumeroFuncionario.Enabled := true;
  edtComplementoFuncionario.Enabled := true;
  cboUsuarioFuncionario.Enabled := true;
  tgsSituacaoFuncionario.Enabled := true;
  rdbComercial.Enabled := true;
  rdbResidencial.Enabled := true;
  rdbMasculino.Enabled := true;
  rdbFeminino.Enabled := true;
  tgsSituacaoFuncionario.state := tssOn;
end;

end.
