unit unEstoqueMaterial;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, unFormPadrao, Data.DB, System.Actions,
  Vcl.ActnList, System.ImageList, Vcl.ImgList, Vcl.Grids, Vcl.DBGrids,
  Vcl.ExtCtrls, Vcl.ComCtrls, Vcl.ToolWin, Vcl.WinXCtrls, Vcl.StdCtrls,
  Vcl.Mask, Vcl.DBCtrls, System.UITypes, VCLTee.TeCanvas,
  System.Generics.Collections,
  Vcl.CheckLst;

type

  TMaterial = class
  public
    CodMat: Integer;
    QtdMat: Integer;
    IdList: Integer;
    // CodMov: Integer;
  end;

  TfrmEstoqueMaterial = class(TfrmPadrao)
    dsEstoqueMaterial: TDataSource;
    dsMateriais: TDataSource;
    dsFuncionario: TDataSource;
    Panel2: TPanel;
    gbF4: TGroupBox;
    edtCodigoEstoqueMaterial: TDBEdit;
    GroupBox3: TGroupBox;
    edtDataMovimentacao: TDBEdit;
    gbU6: TGroupBox;
    gbFuncionario: TGroupBox;
    cboFuncionario: TDBLookupComboBox;
    GroupBox2: TGroupBox;
    edtObservacao: TDBEdit;
    Panel3: TPanel;
    GroupBox4: TGroupBox;
    Label1: TLabel;
    GroupBox5: TGroupBox;
    btnIncluirMaterial: TButton;
    cboMateriais: TDBLookupComboBox;
    edtQtdMaterial: TEdit;
    dsItensEstoque: TDataSource;
    listMateriais: TCheckListBox;
    btnExcluirMaterial: TButton;
    cboOperacao: TDBComboBox;
    dbgMateriaisEmEstoque: TDBGrid;
    Label2: TLabel;
    dsMateriaisEmEstoque: TDataSource;
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure actIncluirExecute(Sender: TObject);
    procedure actExcluirExecute(Sender: TObject);
    procedure actCancelarExecute(Sender: TObject);
    procedure actSalvarExecute(Sender: TObject);
    procedure btnIncluirMaterialClick(Sender: TObject);
    procedure cboOperacaoChange(Sender: TObject);
    procedure btnExcluirMaterialClick(Sender: TObject);

  private
    { Private declarations }
    procedure AtualizaNomeGrid;
    procedure InclusaoEdicao;
    procedure DesativaCampos;
  public
    { Public declarations }
  end;

var
  frmEstoqueMaterial: TfrmEstoqueMaterial;
  ListaMateriais: TObjectList<TMaterial>;

implementation

{$R *.dfm}

uses unDmEstoqueMaterial;

procedure TfrmEstoqueMaterial.actCancelarExecute(Sender: TObject);
begin
  if messagedlg('Deseja mesmo cancelar o registro?', mtconfirmation,
    [mbyes, mbno], 0) = mryes then
  begin
    dmEstoqueMaterial.cdsEstoqueMaterial.Cancel;
    DesativaCampos;

    // Limpar todos os registros das listas
    listMateriais.Clear;
    ListaMateriais.Clear;
    inherited;
    btnAlterar.Enabled := false;
  end;
end;

procedure TfrmEstoqueMaterial.actExcluirExecute(Sender: TObject);
begin
  inherited;
  if messagedlg('Deseja mesmo excluir o registro?', mtconfirmation,
    [mbyes, mbno], 0) = mryes then

  begin
    dmEstoqueMaterial.cdsEstoqueMaterial.delete;
    dmEstoqueMaterial.cdsEstoqueMaterial.ApplyUpdates(0);
  end;
end;

procedure TfrmEstoqueMaterial.actIncluirExecute(Sender: TObject);
begin
  inherited;
  InclusaoEdicao;
  dmEstoqueMaterial.cdsEstoqueMaterial.append;
  edtDataMovimentacao.text := FormatDateTime('dd/mm/yyyy', date);
  // edtNomeMaterial.SetFocus;
end;

procedure TfrmEstoqueMaterial.actSalvarExecute(Sender: TObject);
var
  codigoMovimento: Integer;
  I: Integer;
  material: TMaterial;
begin
  dmEstoqueMaterial.cdsEstoqueMaterial.post;
  if (dmEstoqueMaterial.cdsEstoqueMaterial.ChangeCount > 0) then
    dmEstoqueMaterial.cdsEstoqueMaterial.ApplyUpdates(-1);

  // Atualizar o TClientDataSet com os dados do servidor
  dmEstoqueMaterial.cdsEstoqueMaterial.Refresh;

  // Obter o código do registro principal
  codigoMovimento := dmEstoqueMaterial.cdsEstoqueMaterial.FieldByName('cod')
    .AsInteger;

  for I := 0 to ListaMateriais.Count - 1 do
  begin
    material := ListaMateriais[I];

    // Adicionar um novo registro ao DataSource
    dmEstoqueMaterial.cdsItensEstoque.append;

    // Preencher os campos com os valores do material
    dmEstoqueMaterial.cdsItensEstoque.FieldByName('COD').AsInteger := I + 1;
    dmEstoqueMaterial.cdsItensEstoque.FieldByName('CODMAT').AsInteger :=
      material.CodMat;
    dmEstoqueMaterial.cdsItensEstoque.FieldByName('QTDMAT').AsInteger :=
      material.QtdMat;
    dmEstoqueMaterial.cdsItensEstoque.FieldByName('CODMOV').AsInteger :=
      codigoMovimento;
  end;

  // Postar o registro adicionado
  dmEstoqueMaterial.cdsItensEstoque.post;

  // Aplicar as atualizações no banco de dados
  if (dmEstoqueMaterial.cdsItensEstoque.ChangeCount > 0) then
    dmEstoqueMaterial.cdsItensEstoque.ApplyUpdates(-1);

  dmEstoqueMaterial.cdsEstoqueMaterial.Close;
  dmEstoqueMaterial.cdsEstoqueMaterial.Open;

  dmEstoqueMaterial.cdsMateriaisEmEstoque.Close;
  dmEstoqueMaterial.cdsMateriaisEmEstoque.Open;  

  // Limpar todos os registros das listas
  listMateriais.Clear;
  ListaMateriais.Clear;

  AtualizaNomeGrid;
  DesativaCampos;

  inherited;
  btnAlterar.Enabled := false;
end;

procedure TfrmEstoqueMaterial.AtualizaNomeGrid;
var
  I: Integer;
begin
  // Ajusta o tamanho dos campos do grid Principal
  for I := 0 to dbgFormPadrao.Columns.Count - 1 do
  begin
    if dbgFormPadrao.Columns.Items[I].Title.caption = 'CODFUNC' then
    begin
      dbgFormPadrao.Columns[I].Visible := false;
    end;
    dbgFormPadrao.Columns[I].Width :=
      Canvas.TextWidth(dbgFormPadrao.Columns[I].Field.AsString) + 20;
  end;

    // Ajusta o tamanho dos campos do grid de Estoque
  for I := 0 to dbgMateriaisEmEstoque.Columns.Count - 1 do
  begin
    dbgMateriaisEmEstoque.Columns[I].Width :=
      Canvas.TextWidth(dbgMateriaisEmEstoque.Columns[I].Field.AsString) + 20;
  end;  
end;

procedure TfrmEstoqueMaterial.btnExcluirMaterialClick(Sender: TObject);
var
  I: Integer;
begin
  inherited;
  for I := listMateriais.Count - 1 downto 0 do
  begin
    if listMateriais.Checked[I] then
    begin
      listMateriais.Items.delete(I);
      ListaMateriais.Remove(ListaMateriais[I])
    end;
  end;
end;

procedure TfrmEstoqueMaterial.btnIncluirMaterialClick(Sender: TObject);
var
  material: TMaterial;
begin
  inherited;

  // Cria um novo objeto Material
  material := TMaterial.Create;
  material.CodMat := cboMateriais.KeyValue;
  material.QtdMat := StrToInt(edtQtdMaterial.text);
  material.IdList := listMateriais.Items.Count;
  // Material.CodMov := StrToInt(edtCodigoEstoqueMaterial.Text);

  // Adiciona o produto à lista da classe
  ListaMateriais.Add(material);

  // Adiciona o material ao listBox
  listMateriais.Items.Add(cboMateriais.text + ' - ' + edtQtdMaterial.text);

  cboMateriais.KeyValue := null;
  edtQtdMaterial.text := '';
end;

procedure TfrmEstoqueMaterial.cboOperacaoChange(Sender: TObject);
begin
  inherited;
  if cboOperacao.text = 'Saída' then
    gbFuncionario.Visible := true
  else
    gbFuncionario.Visible := false
end;

procedure TfrmEstoqueMaterial.DesativaCampos;
begin
  edtDataMovimentacao.Enabled := false;
  cboOperacao.Enabled := false;
  cboFuncionario.Enabled := false;
  edtObservacao.Enabled := false;
  cboMateriais.Enabled := false;
  edtQtdMaterial.Enabled := false;
  btnIncluirMaterial.Enabled := false;
  listMateriais.Enabled := false;
  btnExcluirMaterial.Enabled := false;
end;

procedure TfrmEstoqueMaterial.FormCreate(Sender: TObject);
begin
  inherited;
  if not Assigned(dmEstoqueMaterial) then
    dmEstoqueMaterial := tdmEstoqueMaterial.Create(nil);
    
  dsEstoqueMaterial.DataSet := dmEstoqueMaterial.cdsEstoqueMaterial; 
  dsMateriaisEmEstoque.DataSet := dmEstoqueMaterial.cdsMateriaisEmEstoque; 
  

  // Criar a lista de produtos
  ListaMateriais := TObjectList<TMaterial>.Create;
end;

procedure TfrmEstoqueMaterial.FormDestroy(Sender: TObject);
begin
  inherited;
  // fecha o data set e destruo objeto
  if Assigned(dmEstoqueMaterial) then
  begin
    dmEstoqueMaterial.cdsEstoqueMaterial.Close;
    freeandnil(dmEstoqueMaterial);
  end;
  // Liberar a lista de produtos
  ListaMateriais.Free;
end;

procedure TfrmEstoqueMaterial.FormShow(Sender: TObject);
begin
  inherited;
  // abro o dataset
  dmEstoqueMaterial.cdsEstoqueMaterial.Open;
  dmEstoqueMaterial.cdsFuncionario.Open;
  dmEstoqueMaterial.cdsMateriais.Open;
  dmEstoqueMaterial.cdsItensEstoque.Open;
  dmEstoqueMaterial.cdsMateriaisEmEstoque.Open;
  AtualizaNomeGrid;
  btnAlterar.Enabled := false;
end;

procedure TfrmEstoqueMaterial.InclusaoEdicao;
begin
  edtDataMovimentacao.Enabled := true;
  cboOperacao.Enabled := true;
  cboFuncionario.Enabled := true;
  edtObservacao.Enabled := true;
  cboMateriais.Enabled := true;
  edtQtdMaterial.Enabled := true;
  btnIncluirMaterial.Enabled := true;
  listMateriais.Enabled := true;
  btnExcluirMaterial.Enabled := true;
  btnAlterar.Enabled := false;  
end;

end.
