unit unEstoqueMaterial;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, unFormPadrao, Data.DB, System.Actions,
  Vcl.ActnList, System.ImageList, Vcl.ImgList, Vcl.Grids, Vcl.DBGrids,
  Vcl.ExtCtrls, Vcl.ComCtrls, Vcl.ToolWin, Vcl.WinXCtrls, Vcl.StdCtrls,
  Vcl.Mask, Vcl.DBCtrls;

type
  TfrmEstoqueMaterial = class(TfrmPadrao)
    dsEstoqueMaterial: TDataSource;
    gbF4: TGroupBox;
    edtCodigoEstoqueMaterial: TDBEdit;
    gbF5: TGroupBox;
    tgsSituacaoEstoqueMaterial: TToggleSwitch;
    GroupBox1: TGroupBox;
    edtDataInativacaoEstoqueMaterial: TDBEdit;
    GroupBox2: TGroupBox;
    edtDataInclusaoEstoqueMaterial: TDBEdit;
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure dsEstoqueMaterialDataChange(Sender: TObject; Field: TField);
    procedure actIncluirExecute(Sender: TObject);
    procedure actAlterarExecute(Sender: TObject);
    procedure actExcluirExecute(Sender: TObject);
    procedure actCancelarExecute(Sender: TObject);
    procedure actSalvarExecute(Sender: TObject);
  private
    { Private declarations }
    procedure AtualizaNomeGrid;
    procedure InclusaoEdicao;
    procedure DesativaCampos;
  public
    { Public declarations }
  end;

var
  frmEstoqueMaterial: TfrmEstoqueMaterial;

implementation

{$R *.dfm}

uses unDmEstoqueMaterial;

procedure TfrmEstoqueMaterial.actAlterarExecute(Sender: TObject);
begin
  inherited;
  InclusaoEdicao;
  dmCadastroFuncionario.cdsCadastroFuncionario.Edit;
  edtCpfFuncionario.SetFocus;
end;

procedure TfrmEstoqueMaterial.actCancelarExecute(Sender: TObject);
begin
  if messagedlg('Deseja mesmo cancelar o registro?', mtconfirmation,
    [mbyes, mbno], 0) = mryes then
  begin
    dmCadastroFuncionario.cdsCadastroFuncionario.Cancel;
    DesativaCampos;
    inherited;
  end;
end;

procedure TfrmEstoqueMaterial.actExcluirExecute(Sender: TObject);
begin
  inherited;
  if messagedlg('Deseja mesmo excluir o registro?', mtconfirmation,
    [mbyes, mbno], 0) = mryes then

  begin
    dmCadastroFuncionario.cdsCadastroFuncionario.delete;
    dmCadastroFuncionario.cdsCadastroFuncionario.ApplyUpdates(0);
  end;
end;

procedure TfrmEstoqueMaterial.actIncluirExecute(Sender: TObject);
begin
  inherited;
  InclusaoEdicao;
  dmCadastroFuncionario.cdsCadastroFuncionario.append;
  edtDataInclusaoFuncionario.text := FormatDateTime('dd/mm/yyyy', date);
  edtCpfFuncionario.SetFocus;
end;

procedure TfrmEstoqueMaterial.actSalvarExecute(Sender: TObject);
begin
  if tgsSituacaoFuncionario.state = tssOn then
  begin
    dmCadastroFuncionario.cdsCadastroFuncionario.FieldByName('Sit').text := '1';
    edtDataInativacaoFuncionario.text := '';
  end
  else
  begin
    dmCadastroFuncionario.cdsCadastroFuncionario.FieldByName('Sit').text := '0';
    edtDataInativacaoFuncionario.text := FormatDateTime('dd/mm/yyyy', date);
  end;

  if rdbComercial.Checked = true then
  begin
    dmCadastroFuncionario.cdsCadastroFuncionario.FieldByName('CODTIPENDER')
      .text := 'C';
  end
  else
  begin
    dmCadastroFuncionario.cdsCadastroFuncionario.FieldByName('CODTIPENDER')
      .text := 'R';
  end;

  if rdbMasculino.Checked = true then
  begin
    dmCadastroFuncionario.cdsCadastroFuncionario.FieldByName('CODGENERO')
      .text := 'M';
  end
  else
  begin
    dmCadastroFuncionario.cdsCadastroFuncionario.FieldByName('CODGENERO')
      .text := 'F';
  end;

  dmCadastroFuncionario.cdsCadastroFuncionario.post;
  if (dmCadastroFuncionario.cdsCadastroFuncionario.ChangeCount > 0) then
    dmCadastroFuncionario.cdsCadastroFuncionario.ApplyUpdates(-1);

  dmCadastroFuncionario.cdsCadastroFuncionario.Close;
  dmCadastroFuncionario.cdsCadastroFuncionario.Open;
  AtualizaNomeGrid;
  DesativaCampos;
  inherited;
end;

procedure TfrmEstoqueMaterial.AtualizaNomeGrid;
var
  i: Integer;
begin
  // Ajusta o tamanho dos campos do grid
  for i := 0 to dbgFormPadrao.Columns.Count - 1 do
  begin
    if dbgFormPadrao.Columns.Items[i].Title.caption = 'CODSIT' then
    begin
      dbgFormPadrao.Columns[i].Visible := false;
    end;
    dbgFormPadrao.Columns[i].Width := Canvas.TextWidth(dbgFormPadrao.Columns[i].Field.AsString) + 20;
  end;
end;

procedure TfrmEstoqueMaterial.DesativaCampos;
begin
//  edtCpfFuncionario.Enabled := false;
//  edtNomeFuncionario.Enabled := false;
//  edtDataNascimentoFuncionario.Enabled := false;
//  edtNacionalidadeFuncionario.Enabled := false;
//  edtCargoFuncionario.Enabled := false;
//  edtDepartamentoFuncionario.Enabled := false;
//  edtTelefoneFuncionario.Enabled := false;
//  edtCepFuncionario.Enabled := false;
//  edtUfFuncionario.Enabled := false;
//  edtCidadeFuncionario.Enabled := false;
//  edtBairroFuncionario.Enabled := false;
//  edtTipoLogradouroFuncionario.Enabled := false;
//  edtLogradouroFuncionario.Enabled := false;
//  edtNumeroFuncionario.Enabled := false;
//  edtComplementoFuncionario.Enabled := false;
//  cboUsuarioFuncionario.Enabled := false;
//  tgsSituacaoFuncionario.Enabled := false;
//  rdbComercial.Enabled := false;
//  rdbResidencial.Enabled := false;
//  rdbMasculino.Enabled := false;
//  rdbFeminino.Enabled := false;
//  tgsSituacaoFuncionario.state := tssOn;
end;

procedure TfrmEstoqueMaterial.dsEstoqueMaterialDataChange(Sender: TObject;
  Field: TField);
begin
  inherited;

//  if not(dmCadastroFuncionario.cdsCadastroFuncionario.state in [dsEdit, dsInsert])
//  then
//  begin
//
//    if dmCadastroFuncionario.cdsCadastroFuncionario.FieldByName('Sit').text = '1'
//    then
//    begin
//      tgsSituacaoFuncionario.state := tssOn;
//    end
//    else
//    begin
//      tgsSituacaoFuncionario.state := tssOff;
//    end;
//  end;
end;

procedure TfrmEstoqueMaterial.FormCreate(Sender: TObject);
begin
  inherited;
  // criando o datamodule de clientes para uso
  if not Assigned(dmEstoqueMaterial) then
    dmEstoqueMaterial := tdmEstoqueMaterial.Create(nil);
  dsEstoqueMaterial.dataset := dmEstoqueMaterial.cdsEstoqueMaterial;
end;

procedure TfrmEstoqueMaterial.FormDestroy(Sender: TObject);
begin
  inherited;
  // fecha o data set e destruo objeto
  if Assigned(dmEstoqueMaterial) then
  begin
    dmEstoqueMaterial.cdsEstoqueMaterial.Close;
    freeandnil(dmEstoqueMaterial);
  end;
end;

procedure TfrmEstoqueMaterial.FormShow(Sender: TObject);
begin
  inherited;
  // abro o dataset
  dmEstoqueMaterial.cdsEstoqueMaterial.Open;
  dmEstoqueMaterial.cdsEstoqueMaterial.Open;
  AtualizaNomeGrid;
end;

procedure TfrmEstoqueMaterial.InclusaoEdicao;
begin
//  edtCpfFuncionario.Enabled := true;
//  edtNomeFuncionario.Enabled := true;
//  edtDataNascimentoFuncionario.Enabled := true;
//  edtNacionalidadeFuncionario.Enabled := true;
//  edtCargoFuncionario.Enabled := true;
//  edtDepartamentoFuncionario.Enabled := true;
//  edtTelefoneFuncionario.Enabled := true;
//  edtCepFuncionario.Enabled := true;
//  edtUfFuncionario.Enabled := true;
//  edtCidadeFuncionario.Enabled := true;
//  edtBairroFuncionario.Enabled := true;
//  edtTipoLogradouroFuncionario.Enabled := true;
//  edtLogradouroFuncionario.Enabled := true;
//  edtNumeroFuncionario.Enabled := true;
//  edtComplementoFuncionario.Enabled := true;
//  cboUsuarioFuncionario.Enabled := true;
//  tgsSituacaoFuncionario.Enabled := true;
//  rdbComercial.Enabled := true;
//  rdbResidencial.Enabled := true;
//  rdbMasculino.Enabled := true;
//  rdbFeminino.Enabled := true;
//  tgsSituacaoFuncionario.state := tssOn;
end;

end.
